openapi: 3.0.0
info:
  title: Get Items in Custom Carousel
  version: 1.0.0
servers:
  - url: /api
paths:
  /blogs:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogList'
          description: A list of blogs
      summary: Return a list of blogs for the carousel(all)
      x-accepts: application/json
  /blogs/{title}:
    delete:
      parameters:
        - description: title of the blog
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: Blog deleted successfully
        "400":
          description: Invalid request
      summary: Delete a specific blog by its ID
      x-accepts: application/json
    get:
      parameters:
        - description: title of the blog
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: Blog retrieved successfully
        "404":
          description: Blog not found
      summary: Return a specific blog by its ID
      x-accepts: application/json
    put:
      parameters:
        - description: title of the blog
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      responses:
        "200":
          description: Blog updated successfully
        "400":
          description: Invalid request payload
      summary: Update a specific blog by its ID
      x-content-type: application/json
      x-accepts: application/json
  /categories:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryList'
          description: A list of categories
      summary: Return all categories
      x-accepts: application/json
  /categories/{title}:
    get:
      parameters:
        - description: title of the category
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Category retrieved successfully
        "404":
          description: Category not found
      summary: Retrieve a specific category (Search by key of title)
      x-accepts: application/json
    delete:
      parameters:
        - description: title of the category
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: Category deleted successfully
        "400":
          description: Invalid request
      summary: Delete a specific category by its title
      x-accepts: application/json

    post:
      parameters:
        - description: title of the category
          explode: false
          in: path
          name: title
          required: true
          schema:
            type: string
          style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Category created successfully
        '400':
          description: Invalid request payload
      summary: Create a new category with a custom key
      x-content-type: application/json
      x-accepts: application/json
  /create-view:
    get:
      responses:
        "200":
          description: Data retrieved successfully
        "400":
          description: Invalid request
      summary: Return Create View Data
      x-accepts: application/json
  /edit-view/{id}:
    get:
      parameters:
        - description: ID of the blog
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditViewData'
          description: Edit view data retrieved successfully
      summary: Get the edit view data
      x-accepts: application/json
    put:
      parameters:
        - description: ID of the blog
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditViewData'
        required: true
      responses:
        "200":
          description: Edit view data updated successfully
        "400":
          description: Invalid request payload
      summary: Update the edit view data
      x-content-type: application/json
      x-accepts: application/json
  /recent-view:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentViewData'
          description: Recent view data retrieved successfully
      summary: Get the recent view data
      x-accepts: application/json
  /recent-view/{id}:
    delete:
      parameters:
        - description: ID of the recent view data
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecentViewData'
        required: true
      responses:
        "200":
          description: Recent view data deleted successfully
        "400":
          description: Invalid request payload
      summary: Delete a specific blog by its ID
      x-content-type: application/json
      x-accepts: application/json
    get:
      parameters:
        - description: ID of the blog
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentViewData'
          description: Recent view data retrieved successfully
      summary: Search specific data by ID
      x-accepts: application/json
    put:
      parameters:
        - description: ID of the blog
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecentViewData'
        required: true
      responses:
        "200":
          description: Recent view data updated successfully
        "400":
          description: Invalid request payload
      summary: Update data of the specific blog
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Blog:
      example:
        image: https://example.com/aeiou
        link: https://example.com/aeiou
        title: title
      properties:
        title:
          description: The title of the blog
          type: string
        image:
          description: The URL of the blog image
          format: url
          type: string
        link:
          description: The URL of the blog link
          format: url
          type: string
      type: object
    BlogList:
      items:
        $ref: '#/components/schemas/Blog'
      type: array
    Category:
      example:
        title: title
        key: key
      properties:
        title:
          description: The title of the category
          type: string
        key:
          description: The key of the category
          type: string
      type: object
    CategoryList:
      items:
        $ref: '#/components/schemas/Category'
      type: array
    Month:
      example:
        code: code
        name: name
      properties:
        name:
          type: string
        code:
          type: string
      type: object
    CreateViewData:
      properties:
        title:
          type: string
        day:
          type: string
        year:
          type: string
        hour:
          type: string
        minute:
          type: string
        months:
          items:
            $ref: '#/components/schemas/Month'
          type: array
        selectedMonth:
          $ref: '#/components/schemas/Month'
        selectedCategories:
          description: keep the checked category
          items:
            type: string
          type: array
        categories:
          items:
            type: string
          type: array
        categoryCount:
          type: integer
        isDraft:
          type: string
      type: object
    EditViewData:
      example:
        months:
          - code: code
            name: name
          - code: code
            name: name
        hour: hour
        selectedMonth:
          code: code
          name: name
        year: year
        selectedCategories:
          - selectedCategories
          - selectedCategories
        isDraft: isDraft
        id: id
        categories:
          - categories
          - categories
        title: title
        day: day
        minute: minute
      properties:
        id:
          description: "The title,date and time of the blog"
          type: string
        title:
          description: The title of the edit view
          type: string
        day:
          description: The day value
          type: string
        year:
          description: The year value
          type: string
        hour:
          description: The hour value
          type: string
        minute:
          description: The minute value
          type: string
        months:
          items:
            $ref: '#/components/schemas/Month'
          type: array
        selectedMonth:
          $ref: '#/components/schemas/Month'
        selectedCategories:
          items:
            type: string
          type: array
        categories:
          items:
            type: string
          type: array
        isDraft:
          type: string
      type: object
    RecentViewData:
      example:
        selectedAction:
          - name: name
            key: key
          - name: name
            key: key
        allCategories:
          - name: name
            key: key
          - name: name
            key: key
        blogs:
          - date: date
            author: author
            isDraft: isDraft
            id: id
            categories: categories
            title: title
          - date: date
            author: author
            isDraft: isDraft
            id: id
            categories: categories
            title: title
        bulkAction:
          - name: name
            key: key
          - name: name
            key: key
        selectedDate:
          - name: name
            key: key
          - name: name
            key: key
        allDates:
          - name: name
            key: key
          - name: name
            key: key
        selectedCat:
          - name: name
            key: key
          - name: name
            key: key
      properties:
        bulkAction:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        selectedAction:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        allDates:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        selectedDate:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        allCategories:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        selectedCat:
          items:
            $ref: '#/components/schemas/RecentViewData'
          type: array
        blogs:
          items:
            $ref: '#/components/schemas/RecentViewData_blogs'
          type: array
      type: object
    RecentViewData_bulkAction:
      example:
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
      type: object
    RecentViewData_blogs:
      example:
        date: date
        author: author
        isDraft: isDraft
        id: id
        categories: categories
        title: title
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        categories:
          type: string
        date:
          type: string
        isDraft:
          type: string
      type: object
